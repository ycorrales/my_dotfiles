#echo "running zshbash\n"

# don't put duplicate lines in the history. See bash(1) for more options
# ... or force ignoredups and ignorespace
HISTFILE=${ZDOTDIR:-$HOME}/.zsh_history
HISTCONTROL=ignoredups:ignorespace

SAVEHIST=5000
HISTSIZE=2000


# share history across multiple zsh sessions
setopt SHARE_HISTORY
# append to history
setopt APPEND_HISTORY

# adds commands as they are typed, not at shell exit
setopt INC_APPEND_HISTORY

# expire duplicates first
setopt HIST_EXPIRE_DUPS_FIRST 
# do not store duplications
setopt HIST_IGNORE_DUPS
#ignore duplicates when searching
setopt HIST_FIND_NO_DUPS
# removes blank lines from history
setopt HIST_REDUCE_BLANKS

# The following lines were added by compinstall
#zstyle :compinstall filename '$HOME/.zshrc'
# `compinit` scans $fpath, so do this before calling it.
fpath=(~/.zsh/functions $fpath)
autoload -Uz compinit && compinit
autoload -U promptinit; promptinit
prompt myprompt

setopt appendhistory autocd extendedglob nomatch notify KSH_ARRAYS
#bindkey -v


#
#Put custom code from HERE
#
GDATE='date'
type gdate > /dev/null 2>&1 && GDATE='gdate'
b_tm=$($GDATE +%s.%N)
export LC_ALL='en_US.UTF-8'

DOTFILES="$HOME/Software/dotfiles/"
if [[ $HOSTNAME =~ 'rcf.bnl.gov'$ ]]; then
  DOTFILES="$HOME/dotfiles/"
elif [[ -n "$_ALIDOCK_ENV" ]]; then
  DOTFILES=${SINGULARITY_NAME+"${DOTFILES}"}
  DOTFILES=${DOTFILES:="/mnt/Software/dotfiles/"}
  [ -n SINGULARITY_NAME ] && export SW_WORK_DIR="${HOME}/sPHENIX/Projects/01.MVTX/02.Testbeam/TB-2019_FTBF_4stave-telescope/sw"
fi
export DOTFILES

# source all .sh files inside of the sh/ directory
for SHELL_FILE in $( ls -r $DOTFILES/shell/add_files/*.zsh ); do
  source $SHELL_FILE;
  unset SHELL_FILE
done

#
# 'Til HERE
#
e_tm=$($GDATE +%s.%N)
[[ $(echo "$( echo "$e_tm - $b_tm" | bc -l ) > 1" | bc) != 1 ]] || \
  echo "Shell initialization too slow, time higher than 1 sec."
# Execute alidock within the appropriate Python virtual environment
function alidock() {( source "/Users/ycorrales/.virtualenvs/alidock/bin/activate" && command alidock "$@"; exit $?; )}
if command -v pyenv 1>/dev/null 2>&1; then
  eval "$(pyenv init -)"
fi
